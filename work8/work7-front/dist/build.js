(()=>{"use strict";Vue.component("goods-list",{props:["goods"],template:'\n    <div class="goods-list">\n      <goods-item v-for="goodEntity in goods" :goodProp="goodEntity"></goods-item>\n    </div>\n      '}),Vue.component("goods-item",{props:["goodProp"],methods:{async addToCart(n){console.log(this.goodProp),await fetch("http://127.0.0.1:3000/addToCart",{method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(this.goodProp)})}},template:'\n      <div class="goods-item">\n        <h3>{{goodProp.product_name}}</h3>\n        <p>{{goodProp.price}}</p>\n        <button class="cart-btn" @click=addToCart>Купить</button>\n      </div>\n    '}),Vue.component("basket-items",{props:[],trmplate:'\n      <div class="basket" v-if="showBasket">\n        <div class="goods-item" v-for="good in basketGoods">\n          <h3>{{good.product_name}}</h3>\n          <p>{{good.price}}</p>\n        </div>\n      </div>\n    '}),Vue.component("cart-total-price",{data:function(){return{count:0}},template:'\n    <span class="cart-total-price">{{count}}</span>\n    '}),Vue.component("total-products-value",{data:function(){return{count:0}},template:'\n    <span class="total-products-value">{{count}}</span>\n    '}),Vue.component("goods-search",{props:["value"],template:'\n    <input type="text" class="goods-search"\n        v-bind:value="value"\n        v-on:input="$emit(\'input\', $event.target.value)" \n        placeholder="search"\n        >\n    '}),Vue.component("modal-cart",{template:'\n    <transition type="text/x-template" name="modal" id="modal-template">\n        <div class="modal-cart-mask">\n          <div class="modal-cart-wrapper">\n            <div class="modal-cart-container">\n              \n                <div class="alert alert-secondary">\n                  <button class="modal-cart-button" @click="$emit(\'close\')">\n                    Оплатить   \n                  </button>\n                </div \n              \n            </div>\n          </div>\n        </div>\n    </transition>\n    '}),Vue.component("modal",{template:'\n    <transition type="text/x-template" name="modal" id="modal-template">\n          <div class="modal-mask">\n            <div class="modal-wrapper">\n              <div class="modal-container">\n                <slot>\n                  <form class="users-form"> \n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                    <input type="text" class="form-control-name"\n                    placeholder="Имя" name="name"required>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                    <input type="text" class="form-control-secondname"\n                    placeholder="Фамилия" name="secondname"required>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                    <input type="text" class="form-control-mail"\n                    placeholder="Адрес электронной почты" \n                    name="email"required>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                  <div class="input-group">\n                    <input type="text" class="form-control-phone" \n                    placeholder="Телефон" name="phone"required>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                    <input type="password" class="form-control-password-first" \n                    placeholder="Пароль" name="password"required>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                    <input type="password" class="form-control-password-twice" \n                    placeholder="Повторите пароль" name="repeat"required>\n                  </div>\n                  <div class="input-group">\n                    <div class="input-group-prepend">\n                      <span class="input-group-text"></span>\n                    </div>\n                  <div class="input-group">\n                    <div class = "form-group">\n                      <label for="exampleFormControlTextarea1" class="text-phrase" ></label>\n                      <textarea class="form-control-text" id="exampleFormControlTextarea1" rows="3"\n                      name="description" placeholder="Контрольный вопрос" ></textarea>\n                    </div>\n                  </div>\n                  <p class="error-text text-danger"></p>\n                  </form>\n                  <div class="alert alert-secondary">\n                  <button class="modal-default-button close-reg-btn" @click="$emit(\'close\')">\n                    Отправить   \n                  </button>\n                  </div \n                </slot>\n              </div>\n            </div>\n          </div>\n        </transition>\n    '}),new Vue({el:"#app",data:{goods:[],filteredGoods:[],basketGoods:[],id_product:"",quantity:[],totalCost:[],searchLine:"",name:"",searchText:"",showModal:!1,showModalCart:!1,showBasket:!1},methods:{async getProducts(){const n=await fetch("http://127.0.0.1:3000/catalogData");if(n.ok){const t=await n.json();this.goods=t,this.filteredGoods=t}else alert("Ошибка при соединении с сервером")}},async mounted(){await this.getProducts()}})})();